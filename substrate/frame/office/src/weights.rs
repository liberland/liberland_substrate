
//! Autogenerated weights for pallet_office
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-23, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `kacper-HP-ProBook-445-G7`, CPU: `AMD Ryzen 7 4700U with Radeon Graphics`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/substrate
// benchmark
// pallet
// --pallet=pallet_office
// --execution=wasm
// --wasm-execution=compiled
// --steps=20
// --repeat=10
// --output=frame/office/src/weights.rs
// --extrinsic=*
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_office.
pub trait WeightInfo {
	fn set_admin() -> Weight;
	fn set_clerk() -> Weight;
	fn remove_clerk() -> Weight;
	fn execute() -> Weight;
}

/// Weights for pallet_office using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: IdentityOffice Admin (r:1 w:1)
	/// Proof: IdentityOffice Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn set_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `1517`
		// Minimum execution time: 17_763_000 picoseconds.
		Weight::from_parts(18_045_000, 1517)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: IdentityOffice Admin (r:1 w:0)
	/// Proof: IdentityOffice Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: IdentityOffice Clerks (r:0 w:1)
	/// Proof: IdentityOffice Clerks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	fn set_clerk() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `1517`
		// Minimum execution time: 19_407_000 picoseconds.
		Weight::from_parts(19_497_000, 1517)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: IdentityOffice Admin (r:1 w:0)
	/// Proof: IdentityOffice Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: IdentityOffice Clerks (r:1 w:1)
	/// Proof: IdentityOffice Clerks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	fn remove_clerk() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `240`
		//  Estimated: `3514`
		// Minimum execution time: 23_955_000 picoseconds.
		Weight::from_parts(24_246_000, 3514)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: IdentityOffice Clerks (r:1 w:0)
	/// Proof: IdentityOffice Clerks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	fn execute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `222`
		//  Estimated: `3514`
		// Minimum execution time: 22_543_000 picoseconds.
		Weight::from_parts(22_843_000, 3514)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: IdentityOffice Admin (r:1 w:1)
	/// Proof: IdentityOffice Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	fn set_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `1517`
		// Minimum execution time: 17_763_000 picoseconds.
		Weight::from_parts(18_045_000, 1517)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: IdentityOffice Admin (r:1 w:0)
	/// Proof: IdentityOffice Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: IdentityOffice Clerks (r:0 w:1)
	/// Proof: IdentityOffice Clerks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	fn set_clerk() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `1517`
		// Minimum execution time: 19_407_000 picoseconds.
		Weight::from_parts(19_497_000, 1517)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: IdentityOffice Admin (r:1 w:0)
	/// Proof: IdentityOffice Admin (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: IdentityOffice Clerks (r:1 w:1)
	/// Proof: IdentityOffice Clerks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	fn remove_clerk() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `240`
		//  Estimated: `3514`
		// Minimum execution time: 23_955_000 picoseconds.
		Weight::from_parts(24_246_000, 3514)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: IdentityOffice Clerks (r:1 w:0)
	/// Proof: IdentityOffice Clerks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	fn execute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `222`
		//  Estimated: `3514`
		// Minimum execution time: 22_543_000 picoseconds.
		Weight::from_parts(22_843_000, 3514)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
}
