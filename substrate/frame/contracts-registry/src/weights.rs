
//! Autogenerated weights for pallet_contracts_registry
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-02-15, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `michallustyk-HP-ProBook-445-G7`, CPU: `AMD Ryzen 7 4700U with Radeon Graphics`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// target/release/substrate
// benchmark
// pallet
// --pallet=pallet_contracts_registry
// --execution=wasm
// --wasm-execution=compiled
// --steps=20
// --repeat=10
// --output=frame/contracts-registry/src/weights.rs
// --extrinsic=*
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_contracts_registry.
pub trait WeightInfo {
	fn add_judge() -> Weight;
	fn judge_sign_contract() -> Weight;
	fn create_contract(s: u32, ) -> Weight;
	fn party_sign_contract() -> Weight;
	fn remove_judge() -> Weight;
	fn remove_contract() -> Weight;
}

/// Weights for pallet_contracts_registry using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: ContractsRegistry Judges (r:1 w:1)
	/// Proof: ContractsRegistry Judges (max_values: Some(1), max_size: Some(513), added: 1008, mode: MaxEncodedLen)
	fn add_judge() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `584`
		//  Estimated: `1998`
		// Minimum execution time: 18_024_000 picoseconds.
		Weight::from_parts(18_355_000, 1998)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: ContractsRegistry Judges (r:1 w:0)
	/// Proof: ContractsRegistry Judges (max_values: Some(1), max_size: Some(513), added: 1008, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry JudgesSignatures (r:1 w:1)
	/// Proof: ContractsRegistry JudgesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	fn judge_sign_contract() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1177`
		//  Estimated: `3990`
		// Minimum execution time: 24_145_000 picoseconds.
		Weight::from_parts(24_457_000, 3990)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Balances Reserves (r:1 w:1)
	/// Proof: Balances Reserves (max_values: None, max_size: Some(1249), added: 3724, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry NextContractsId (r:1 w:0)
	/// Proof: ContractsRegistry NextContractsId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry Contracts (r:0 w:1)
	/// Proof: ContractsRegistry Contracts (max_values: None, max_size: Some(2097729), added: 2100204, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry PartiesSignatures (r:0 w:1)
	/// Proof: ContractsRegistry PartiesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry JudgesSignatures (r:0 w:1)
	/// Proof: ContractsRegistry JudgesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 2097151]`.
	fn create_contract(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `250`
		//  Estimated: `4714`
		// Minimum execution time: 54_995_000 picoseconds.
		Weight::from_parts(55_145_000, 4714)
			// Standard Error: 5
			.saturating_add(Weight::from_parts(924, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: ContractsRegistry Contracts (r:1 w:0)
	/// Proof: ContractsRegistry Contracts (max_values: None, max_size: Some(2097729), added: 2100204, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry PartiesSignatures (r:1 w:1)
	/// Proof: ContractsRegistry PartiesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	fn party_sign_contract() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1231`
		//  Estimated: `2101194`
		// Minimum execution time: 26_851_000 picoseconds.
		Weight::from_parts(27_532_000, 2101194)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: ContractsRegistry Judges (r:1 w:1)
	/// Proof: ContractsRegistry Judges (max_values: Some(1), max_size: Some(513), added: 1008, mode: MaxEncodedLen)
	fn remove_judge() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `616`
		//  Estimated: `1998`
		// Minimum execution time: 19_558_000 picoseconds.
		Weight::from_parts(19_958_000, 1998)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: ContractsRegistry Contracts (r:1 w:1)
	/// Proof: ContractsRegistry Contracts (max_values: None, max_size: Some(2097729), added: 2100204, mode: MaxEncodedLen)
	/// Storage: Balances Reserves (r:1 w:1)
	/// Proof: Balances Reserves (max_values: None, max_size: Some(1249), added: 3724, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry PartiesSignatures (r:0 w:1)
	/// Proof: ContractsRegistry PartiesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry JudgesSignatures (r:0 w:1)
	/// Proof: ContractsRegistry JudgesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	fn remove_contract() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `983`
		//  Estimated: `2101194`
		// Minimum execution time: 57_058_000 picoseconds.
		Weight::from_parts(58_060_000, 2101194)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: ContractsRegistry Judges (r:1 w:1)
	/// Proof: ContractsRegistry Judges (max_values: Some(1), max_size: Some(513), added: 1008, mode: MaxEncodedLen)
	fn add_judge() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `584`
		//  Estimated: `1998`
		// Minimum execution time: 18_024_000 picoseconds.
		Weight::from_parts(18_355_000, 1998)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: ContractsRegistry Judges (r:1 w:0)
	/// Proof: ContractsRegistry Judges (max_values: Some(1), max_size: Some(513), added: 1008, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry JudgesSignatures (r:1 w:1)
	/// Proof: ContractsRegistry JudgesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	fn judge_sign_contract() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1177`
		//  Estimated: `3990`
		// Minimum execution time: 24_145_000 picoseconds.
		Weight::from_parts(24_457_000, 3990)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Balances Reserves (r:1 w:1)
	/// Proof: Balances Reserves (max_values: None, max_size: Some(1249), added: 3724, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry NextContractsId (r:1 w:0)
	/// Proof: ContractsRegistry NextContractsId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry Contracts (r:0 w:1)
	/// Proof: ContractsRegistry Contracts (max_values: None, max_size: Some(2097729), added: 2100204, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry PartiesSignatures (r:0 w:1)
	/// Proof: ContractsRegistry PartiesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry JudgesSignatures (r:0 w:1)
	/// Proof: ContractsRegistry JudgesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 2097151]`.
	fn create_contract(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `250`
		//  Estimated: `4714`
		// Minimum execution time: 54_995_000 picoseconds.
		Weight::from_parts(55_145_000, 4714)
			// Standard Error: 5
			.saturating_add(Weight::from_parts(924, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: ContractsRegistry Contracts (r:1 w:0)
	/// Proof: ContractsRegistry Contracts (max_values: None, max_size: Some(2097729), added: 2100204, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry PartiesSignatures (r:1 w:1)
	/// Proof: ContractsRegistry PartiesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	fn party_sign_contract() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1231`
		//  Estimated: `2101194`
		// Minimum execution time: 26_851_000 picoseconds.
		Weight::from_parts(27_532_000, 2101194)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: ContractsRegistry Judges (r:1 w:1)
	/// Proof: ContractsRegistry Judges (max_values: Some(1), max_size: Some(513), added: 1008, mode: MaxEncodedLen)
	fn remove_judge() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `616`
		//  Estimated: `1998`
		// Minimum execution time: 19_558_000 picoseconds.
		Weight::from_parts(19_958_000, 1998)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: ContractsRegistry Contracts (r:1 w:1)
	/// Proof: ContractsRegistry Contracts (max_values: None, max_size: Some(2097729), added: 2100204, mode: MaxEncodedLen)
	/// Storage: Balances Reserves (r:1 w:1)
	/// Proof: Balances Reserves (max_values: None, max_size: Some(1249), added: 3724, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry PartiesSignatures (r:0 w:1)
	/// Proof: ContractsRegistry PartiesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	/// Storage: ContractsRegistry JudgesSignatures (r:0 w:1)
	/// Proof: ContractsRegistry JudgesSignatures (max_values: None, max_size: Some(525), added: 3000, mode: MaxEncodedLen)
	fn remove_contract() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `983`
		//  Estimated: `2101194`
		// Minimum execution time: 57_058_000 picoseconds.
		Weight::from_parts(58_060_000, 2101194)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
}
